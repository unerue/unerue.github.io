Traceback (most recent call last):
  File "C:\Users\unerue\miniconda3\envs\jupyterbook\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\unerue\miniconda3\envs\jupyterbook\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\unerue\miniconda3\envs\jupyterbook\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\unerue\miniconda3\envs\jupyterbook\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\unerue\miniconda3\envs\jupyterbook\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\unerue\miniconda3\envs\jupyterbook\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\unerue\miniconda3\envs\jupyterbook\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\unerue\miniconda3\envs\jupyterbook\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from abc import ABCMeta, abstractmethod


class Component(metaclass=abc.ABCMeta):
    """
    책임을 동적으로 추가할 수 있는 객체에 대한 인터페이스를 정의함.
    """
    @abstractmethod
    def operation(self):
        pass


class Decorator(Component, metaclass=ABCMeta):
    """
    Component 객체에 대한 참조를 유지하고 Component의 
    인터페이스를 준수하는 인터페이스를 정의함.
    """
    def __init__(self, component):
        self._component = component

    @abstractmethod
    def operation(self):
        pass


class ConcreteDecoratorA(Decorator):
    """
    구성 요소에 책임을 추가함.
    """
    def operation(self):
        # ...
        self._component.operation()
        # ...


class ConcreteDecoratorB(Decorator):
    """
    구성 요소에 책임을 추가함.
    """
    def operation(self):
        # ...
        self._component.operation()
        # ...


class ConcreteComponent(Component):
    """
    추가 책임이 첨부될 수 있는 개체를 정의함.
    """
    def operation(self):
        pass


def main():
    concrete_component = ConcreteComponent()
    concrete_decorator_a = ConcreteDecoratorA(concrete_component)
    concrete_decorator_b = ConcreteDecoratorB(concrete_decorator_a)
    concrete_decorator_b.operation()
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mNameError[0m                                 Traceback (most recent call last)
Cell [1;32mIn[14], line 4[0m
[0;32m      1[0m [38;5;28;01mfrom[39;00m [38;5;21;01mabc[39;00m [38;5;28;01mimport[39;00m ABCMeta, abstractmethod
[1;32m----> 4[0m [38;5;28;01mclass[39;00m [38;5;21;01mComponent[39;00m(metaclass[38;5;241m=[39m[43mabc[49m[38;5;241m.[39mABCMeta):
[0;32m      5[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[0;32m      6[0m [38;5;124;03m    책임을 동적으로 추가할 수 있는 객체에 대한 인터페이스를 정의함.[39;00m
[0;32m      7[0m [38;5;124;03m    """[39;00m
[0;32m      8[0m     [38;5;129m@abstractmethod[39m
[0;32m      9[0m     [38;5;28;01mdef[39;00m [38;5;21moperation[39m([38;5;28mself[39m):

[1;31mNameError[0m: name 'abc' is not defined
NameError: name 'abc' is not defined

