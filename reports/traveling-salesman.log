Traceback (most recent call last):
  File "C:\Users\unerue\miniconda3\envs\vision\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\Users\unerue\miniconda3\envs\vision\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\unerue\miniconda3\envs\vision\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\unerue\miniconda3\envs\vision\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\unerue\miniconda3\envs\vision\lib\asyncio\base_events.py", line 642, in run_until_complete
    return future.result()
  File "C:\Users\unerue\miniconda3\envs\vision\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\unerue\miniconda3\envs\vision\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\unerue\miniconda3\envs\vision\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from pulp import *
from ortools.utils import output

n = 5

costs = [
    [100, 4.0, 4.0, 4.7, 5.0],
    [0.0, 1000, 1.3, 2.5, 1.7],
    [0.0, 1.3, 100, 1.0, 1.4],
    [0.0, 2.5, 1.0, 100, 2.0],
    [0.0, 1.7, 1.4, 2.0, 100],
]

prob = LpProblem('Traveling Salesman Problem', LpMinimize)

indexs = [(i, j) for i in range(n) for j in range(n)]

x = LpVariable.dicts('x', indexs, lowBound=0, cat='Binary')

prob += lpSum([costs[i][j]*x[i, j] for i, j in indexs])

for j in range(n):
    prob += lpSum([x[i, j] for i in range(n)]) == 1
    
for i in range(n):
    prob += lpSum([x[i, j] for j in range(n)]) == 1
    
prob.solve()
print(value(prob.objective))

for i in prob.variables():
    if i.varValue == 1:
        print(i.name, '=', i.varValue)
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Input [1;32mIn [2][0m, in [0;36m<cell line: 1>[1;34m()[0m
[1;32m----> 1[0m [38;5;28;01mfrom[39;00m [38;5;21;01mpulp[39;00m [38;5;28;01mimport[39;00m [38;5;241m*[39m
[0;32m      2[0m [38;5;28;01mfrom[39;00m [38;5;21;01mortools[39;00m[38;5;21;01m.[39;00m[38;5;21;01mutils[39;00m [38;5;28;01mimport[39;00m output
[0;32m      4[0m n [38;5;241m=[39m [38;5;241m5[39m

[1;31mModuleNotFoundError[0m: No module named 'pulp'
ModuleNotFoundError: No module named 'pulp'

