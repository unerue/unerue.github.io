Traceback (most recent call last):
  File "C:\Users\unerue\miniconda3\envs\vision\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\Users\unerue\miniconda3\envs\vision\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\unerue\miniconda3\envs\vision\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\unerue\miniconda3\envs\vision\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\unerue\miniconda3\envs\vision\lib\asyncio\base_events.py", line 642, in run_until_complete
    return future.result()
  File "C:\Users\unerue\miniconda3\envs\vision\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\unerue\miniconda3\envs\vision\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\unerue\miniconda3\envs\vision\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from pulp import *

prob = LpProblem('Unbalaced Transportation Problem', LpMinimize)

n_suppliers = 3
n_buyers = 4

costs = [
    [4, 5, 6, 8],
    [4, 7, 9, 2], 
    [5, 8, 7, 6]
]

supply = [120, 150, 200]
demand = [150, 60, 130, 180]

routes = [(i, j) for i in range(n_suppliers) for j in range(n_buyers)]

x = LpVariable.dicts('X', routes, lowBound=0)

prob += lpSum([x[i, j] * costs[i][j] for i in range(n_suppliers) for j in range(n_buyers)])

for i in range(n_suppliers):
    prob += lpSum([x[i, j] for j in range(n_buyers)]) == supply[i]
    
for j in range(n_buyers):
    prob += lpSum([x[i, j] for i in range(n_suppliers)]) <= demand[j]
    
# Solving problem
prob.solve()
print('Status', LpStatus[prob.status])

print('Z = {}'.format(value(prob.objective)))
for v in prob.variables():
    print('{} = {}'.format(v.name, v.varValue))
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Input [1;32mIn [2][0m, in [0;36m<cell line: 1>[1;34m()[0m
[1;32m----> 1[0m [38;5;28;01mfrom[39;00m [38;5;21;01mpulp[39;00m [38;5;28;01mimport[39;00m [38;5;241m*[39m
[0;32m      3[0m prob [38;5;241m=[39m LpProblem([38;5;124m'[39m[38;5;124mUnbalaced Transportation Problem[39m[38;5;124m'[39m, LpMinimize)
[0;32m      5[0m n_suppliers [38;5;241m=[39m [38;5;241m3[39m

[1;31mModuleNotFoundError[0m: No module named 'pulp'
ModuleNotFoundError: No module named 'pulp'

